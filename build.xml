<project>

  <!-- Ask for version numbers -->
  <input message="current version: " addproperty="version" />
  <input message="release version: " addproperty="release.version" defaultvalue="${version}" />
  <input message="next version: " addproperty="n.version" />

  <property name="current.version.osgi" value="${version}.qualifier" />
  <property name="current.version" value="${version}-SNAPSHOT" />
  <property name="next.version.osgi" value="${n.version}.qualifier" />
  <property name="next.version" value="${n.version}-SNAPSHOT" />

  <!-- Make a new release -->
  <target name="make-release">
    <antcall target="release-version" />

    <antcall target="development-version" />

  </target>

  <target name="release-version">
    <echo message="setting version to ${release.version}" />

    <!-- update pom.xml with release version -->
    <replace dir="${basedir}">
      <include name="**/pom.xml"/>
      <replacefilter token="${current.version}" value="${release.version}" />
    </replace>
    <replace dir="${basedir}">
      <include name="**/MANIFEST.MF"/>
      <replacefilter token="Bundle-Version: ${current.version.osgi}" value="Bundle-Version: ${release.version}" />
    </replace>
    <replace dir="${basedir}">
      <include name="**/feature.xml"/>
      <include name="**/category.xml"/>
      <include name="**/ANTLRv4.product"/>
      <replacefilter token="${current.version.osgi}" value="${release.version}" />
    </replace>

    <echo message="building: ${release.version}..." />
    <!-- recompile -->
    <exec executable="mvn" failonerror="true">
      <arg value="clean"/>
      <arg value="package"/>
    </exec>

    <!-- create p2 repository  -->
    <echo message="prepare for release ${release.version} " />
    <property name="releaseDir" value="updates/release/4.3" />
    <property name="standaloneDir" value="updates/release/standalone" />

    <echo message="creating p2 repository under: ${releaseDir}" />
    <delete dir="${releaseDir}" failonerror="false"/>
    <mkdir dir="${releaseDir}" />
    <copy file="updates/category.xml" todir="${releaseDir}" />
    <copy todir="${releaseDir}">
      <fileset dir="updates/target/repository" />
    </copy>

    <exec executable="git">
      <arg value="status"/>
    </exec>

    <!--
    <exec executable="git">
      <arg value="add"/>
      <arg value="."/>
    </exec>

    <exec executable="git">
      <arg value="commit"/>
      <arg value="-m"/>
      <arg value="release v${release.version}"/>
    </exec>

    <exec executable="git">
      <arg value="tag"/>
      <arg value="-a"/>
      <arg value="v${release.version}"/>
      <arg value="-m"/>
      <arg value="release v${release.version}"/>
    </exec>

    <exec executable="git">
      <arg value="push"/>
      <arg value="origin"/>
      <arg value="v${release.version}"/>
    </exec>
    -->

    <echo message="release done: ${release.version}" />
  </target>

  <target name="development-version">
    <echo message="preparing next development cycle for ${next.version}" />

    <!-- update pom.xml with next version -->
    <replace dir="${basedir}">
      <include name="**/pom.xml"/>
      <replacefilter token="${release.version}" value="${next.version}" />
    </replace>
    <replace dir="${basedir}">
      <include name="**/MANIFEST.MF"/>
      <replacefilter token="Bundle-Version: ${release.version}" value="Bundle-Version: ${next.version.osgi}" />
    </replace>
    <replace dir="${basedir}">
      <include name="**/feature.xml"/>
      <include name="**/category.xml"/>
      <include name="**/ANTLRv4.product"/>
      <replacefilter token="${release.version}" value="${next.version.osgi}" />
    </replace>

    <exec executable="git">
      <arg value="status"/>
    </exec>

    <!--
    <exec executable="git">
      <arg value="add"/>
      <arg value="."/>
    </exec>

    <exec executable="git">
      <arg value="commit"/>
      <arg value="-m"/>
      <arg value="next development cycle v${next.version}"/>
    </exec>

    <exec executable="git">
      <arg value="push"/>
      <arg value="origin"/>
    </exec> -->

  </target>
</project>