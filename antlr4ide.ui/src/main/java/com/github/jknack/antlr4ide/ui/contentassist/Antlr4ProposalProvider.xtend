/*
 * generated by Xtext
 */
package com.github.jknack.antlr4ide.ui.contentassist

import com.github.jknack.antlr4ide.ui.contentassist.AbstractAntlr4ProposalProvider
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.Assignment
import javax.inject.Inject
import org.eclipse.xtext.ui.IImageHelper
import com.github.jknack.antlr4ide.lang.Grammar
import com.github.jknack.antlr4ide.validation.Antlr4Validator

/**
 * see http://www.eclipse.org/Xtext/documentation.html#contentAssist on how to customize content assistant
 */
class Antlr4ProposalProvider extends AbstractAntlr4ProposalProvider {

  @Inject
  IImageHelper imageHelper

  override completeOption_Name(EObject options, Assignment assignment, ContentAssistContext context,
    ICompletionProposalAcceptor acceptor) {

    if (options.eContainer instanceof Grammar) {
      Antlr4Validator::OPTIONS.forEach [ proposal |
        createCompletionProposal(proposal, "option.png", context, acceptor)
      ]
    }
  }

  def private createCompletionProposal(String proposal, String image, ContentAssistContext context,
    ICompletionProposalAcceptor acceptor) {
    acceptor.accept(createCompletionProposal(proposal, proposal, imageHelper.getImage(image), context))
  }
}
